 - tanong kung anong mga naexperience ko na, ang tinanong nya lang kung nakagawa naba ko ng flow, anong flow, anong mga salesforce config, anong mga lwc, sa apex anong mga creniate ko.



 - most complex na nagawa ko sa LWC



 - pano mag display ng list sa LWC



 - pano mag auto update ng account using trigger using fflib





 - sinabi ko rin pala na sa selector class, pwede mag set ng limit. kasi sinabi nya na gusto nya ay 5 records lang daw yung ipapakita



 - oo paps. pwede mo rin masabi sa interview na may Separation of Concern and highly scalable ang ffLib since hiwa hiwalay at clear yung purpose ng bawat layer










===============================
===============================
===============================


I've been on a total of 5 projects during my time here in Deloitte.

and majority of them where handling APEX, LWC, Experience Builder and Flows.


I've been actually assigned last year on a JnJ project but it was a Proof Of Concept engagement. mostly configurations using Health cloud







============
Most Complex thing you did in LWC?

- For me, the latest one on my experience was when I have to show a data on the page but the data comes from 2 different object.. So, upon recieving data from the apex I had to create my own list that has both data from the 2 different objects.

objects was:
 - Training junctions
 - Course




=============
How to dislay a list on LWC?


 - First we get the data from apex
 - then we could use Lightning Record Form if we want it to be ready made.

 - but if we want it customized, then we'll use for each on the data we get from the Apex. The one with the template for each, item, then div key







UDEMY
=====================

https://softwaretestingmasterclass.com/test-assignment-1/


1. Determine ‘how’ the identified test conditions are going to be exercised and implementation of the test cases

2. New Bug  > Assigned > Active > Test > Verified > Closed


3. Statement Testing


4. A black box testing technique appropriate to all levels of testing


5. Maintenance
------------


1. Sanity Testing covers only certain modules in which code changes have been made. Smoke testing covers end to end basic functionalities.


2. We always perform regression testing on stable builds. Before regression testing, we can perform smoke testing on initial builds to accept/reject the application changes.

3. We test the stability of the new functionality or code via sanity testing. It's not a good idea to automate those tests. We can automate part of regression tests to have faster feedback.

--------

1. It ensures that your application can gracefully handle invalid input or unexpected user behaviour.

2. Acceptance Testing

3. Staging Environment

4. Code Review

5. Regression Testing



Software Testing Masterclass (2023) - From Novice to Expert





custom settings and custom metadata


batch files and futures.









I am Arvin Ramirez I been working here in deloitte for almost two year as a salesforce developer I have experiences developing salesforce app and custom app. I also work with J&J last year for the proof of concept for Health cloud. I have also basic knowledge for QA manual testing since I been practicing QA for the past weeks.










==================
FED interview:



ano madalas po gamitin sa FED









==========
EXPERIENCE
Arvin has been consistently meeting the expectations set for him. His attention to details are admirable, taking notes of what's being discussed. By this, he is ensuring that he will be able to cover all scenarios of the requirement which truly reflects on his finished product. He is able to deliver and can work with minimal support needed.


Arvin is a great asset for DCPDC ‘s Internal Project that he was assigned in, he is one of the main developer who also handles the code repository and deployment in their projects. He can work independently and has good technical Salesforce expertise, particularly with relation to APEX and LWC.


Arvin is a Salesforce Certified Administrator and has strong experience in handling declarative and programmatic development in the Salesforce platform using various Apex Classes, Triggers, Test Classes, Visualforce pages, Aura, Lightning Web Components, and Flows to implement complex business requirements  from combined onshore/offshore previous projects and trainings.




































